openapi: 3.0.3
info:
  title: 'Larecta CMS API Documentation'
  description: 'Larecta CMS is a modern API system developed for content management. It includes core CMS functionalities such as user management, authorization, content creation and editing. The API provides a secure and efficient way to manage your content.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/auth/user:
    get:
      summary: 'Get user information.'
      operationId: getUserInformation
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: 'User information retrieved successfully'
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                    email_verified_at: '2024-01-15T10:00:00.000000Z'
                    created_at: '2024-01-15T10:00:00.000000Z'
                    updated_at: '2024-01-15T10:00:00.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User information retrieved successfully'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                      email_verified_at:
                        type: string
                        example: '2024-01-15T10:00:00.000000Z'
                      created_at:
                        type: string
                        example: '2024-01-15T10:00:00.000000Z'
                      updated_at:
                        type: string
                        example: '2024-01-15T10:00:00.000000Z'
      tags:
        - Authentication
  /api/auth/register:
    post:
      summary: 'Creates a new user registration.'
      operationId: createsANewUserRegistration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "User's full name. Maximum: 255 characters."
                  example: mollitia
                  nullable: false
                email:
                  type: string
                  description: "User's email address. Maximum: 255 characters, must be unique."
                  example: huels.cheyenne@example.net
                  nullable: false
                password:
                  type: string
                  description: "User's password. Minimum: 6 characters."
                  example: 'a!nmZ*'
                  nullable: false
              required:
                - name
                - email
                - password
  /api/auth/login:
    post:
      summary: 'Authenticates user and creates token.'
      operationId: authenticatesUserAndCreatesToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: josie.borer@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
              required:
                - email
                - password
  /api/auth/logout:
    post:
      summary: 'Logs out the user and deletes all tokens.'
      operationId: logsOutTheUserAndDeletesAllTokens
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/auth/profile:
    put:
      summary: 'Updates user profile information.'
      operationId: updatesUserProfileInformation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/roles:
    get:
      summary: ''
      operationId: getApiRoles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiRoles
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: natus
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Voluptatem ab voluptatum animi sint necessitatibus.'
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
  '/api/roles/{role_id}':
    get:
      summary: ''
      operationId: getApiRolesRole_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiRolesRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Inventore dolore occaecati ipsam praesentium explicabo et est.'
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
    delete:
      summary: ''
      operationId: deleteApiRolesRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  /api/permissions:
    get:
      summary: ''
      operationId: getApiPermissions
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiPermissions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Et quidem aperiam aut temporibus vel iure.'
                  nullable: true
              required:
                - name
  '/api/permissions/{permission_id}':
    get:
      summary: ''
      operationId: getApiPermissionsPermission_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiPermissionsPermission_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Quaerat dolores qui omnis est unde et ut quam.'
                  nullable: true
    delete:
      summary: ''
      operationId: deleteApiPermissionsPermission_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: permission_id
        description: 'The ID of the permission.'
        example: 2
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  '/api/users/{user_id}':
    get:
      summary: ''
      operationId: getApiUsersUser_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 2
        required: true
        schema:
          type: integer
  /api/admin/contents:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nozrsmitertwjqcbru
                  nullable: false
                body:
                  type: string
                  description: ''
                  example: eum
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                status:
                  type: string
                  description: ''
                  example: archived
                  nullable: false
                  enum:
                    - draft
                    - published
                    - archived
                content:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                meta:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["maiores","similique"]'
                  nullable: true
              required:
                - title
                - body
                - slug
                - status
  '/api/admin/contents/{content_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cxcrinokzhzqmycd
                  nullable: false
                body:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                is_active:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - title
                - body
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: content_id
        description: 'The ID of the content.'
        example: 2
        required: true
        schema:
          type: integer
  /api/admin/types:
    get:
      summary: ''
      operationId: getApiAdminTypes
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiAdminTypes
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vfewjrohqivu
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Fugiat blanditiis vitae iste dicta dolorem.'
                  nullable: true
              required:
                - name
  '/api/admin/types/{type_id}':
    get:
      summary: ''
      operationId: getApiAdminTypesType_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiAdminTypesType_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dmfefwos
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Vel dolorem odit ut velit dolorem asperiores quisquam.'
                  nullable: true
              required:
                - name
    delete:
      summary: ''
      operationId: deleteApiAdminTypesType_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: type_id
        description: 'The ID of the type.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/admin/types/{type}/metas':
    get:
      summary: ''
      operationId: getApiAdminTypesTypeMetas
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiAdminTypesTypeMetas
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gtbbafh
                  nullable: false
                field_type:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xlahpdbecqbofmrmarwzpgk
                  nullable: false
              required:
                - name
                - field_type
    parameters:
      -
        in: path
        name: type
        description: 'The type.'
        example: 11
        required: true
        schema:
          type: integer
  '/api/admin/types/{type}/metas/{meta}':
    get:
      summary: ''
      operationId: getApiAdminTypesTypeMetasMeta
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: ''
      operationId: putApiAdminTypesTypeMetasMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sarsuwnz
                  nullable: false
                field_type:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eoxe
                  nullable: false
              required:
                - name
                - field_type
    delete:
      summary: ''
      operationId: deleteApiAdminTypesTypeMetasMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: type
        description: 'The type.'
        example: 11
        required: true
        schema:
          type: integer
      -
        in: path
        name: meta
        description: 'The meta.'
        example: praesentium
        required: true
        schema:
          type: string
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
