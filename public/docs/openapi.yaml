openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/auth/register:
    post:
      summary: 'Creates a new user registration.'
      operationId: createsANewUserRegistration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "User's full name. Maximum: 255 characters."
                  example: porro
                  nullable: false
                email:
                  type: string
                  description: "User's email address. Maximum: 255 characters, must be unique."
                  example: ocartwright@example.org
                  nullable: false
                password:
                  type: string
                  description: "User's password. Minimum: 6 characters."
                  example: 'bn5W/}<#_D}wP:f'
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/auth/login:
    post:
      summary: 'Authenticates user and creates token.'
      operationId: authenticatesUserAndCreatesToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: feeney.terrell@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/auth/logout:
    post:
      summary: 'Logs out the user and deletes all tokens.'
      operationId: logsOutTheUserAndDeletesAllTokens
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/user:
    get:
      summary: "Retrieves authenticated user's information."
      operationId: retrievesAuthenticatedUsersInformation
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/auth/profile:
    put:
      summary: 'Updates user profile information.'
      operationId: updatesUserProfileInformation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/roles:
    get:
      summary: ''
      operationId: getApiRoles
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiRoles
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Quas laboriosam facilis neque fuga praesentium qui.'
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
              required:
                - name
      security: []
  '/api/roles/{role_id}':
    get:
      summary: ''
      operationId: getApiRolesRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiRolesRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Numquam voluptatem sed reiciendis quo in ullam architecto dolore.'
                  nullable: true
                permissions:
                  type: array
                  description: 'The <code>id</code> of an existing record in the permissions table.'
                  example: null
                  items:
                    type: string
      security: []
    delete:
      summary: ''
      operationId: deleteApiRolesRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  /api/permissions:
    get:
      summary: ''
      operationId: getApiPermissions
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiPermissions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Ut qui eaque veritatis reprehenderit magnam ea.'
                  nullable: true
              required:
                - name
      security: []
  '/api/permissions/{permission_id}':
    get:
      summary: ''
      operationId: getApiPermissionsPermission_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiPermissionsPermission_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Rerum magni laudantium officia aut reiciendis.'
                  nullable: true
      security: []
    delete:
      summary: ''
      operationId: deleteApiPermissionsPermission_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: permission_id
        description: 'The ID of the permission.'
        example: 2
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/users/{user_id}':
    get:
      summary: ''
      operationId: getApiUsersUser_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 2
        required: true
        schema:
          type: integer
  /api/admin/contents:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aoygxdgdnkjchb
                  nullable: false
                body:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                is_active:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - title
                - body
                - slug
      security: []
  '/api/admin/contents/{content_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: arbjeiczdbsnnq
                  nullable: false
                body:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: false
                slug:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                is_active:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - title
                - body
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: content_id
        description: 'The ID of the content.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
