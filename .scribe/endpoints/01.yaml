name: 'Role Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/roles
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: |-
        Listing Operations
        Display a listing of all roles with their associated permissions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3bk8DPh5V61g4Ea6daceZvf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: |-
        Create Operations
        Create a new role with optional permissions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Cupiditate corrupti commodi delectus quis.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      permissions:
        name: permissions
        description: 'The <code>id</code> of an existing record in the permissions table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Cupiditate corrupti commodi delectus quis.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 863VEh6vbdDP5gceaaZ1fk4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/roles/{role_id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: |-
        View Operations  
        Display the specified role with its permissions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E64bdZDegaav3h65fckPV81'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/roles/{role_id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: |-
        Update Operations
        Update the specified role and its permissions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Molestiae beatae ut accusantium asperiores numquam.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      permissions:
        name: permissions
        description: 'The <code>id</code> of an existing record in the permissions table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      description: 'Molestiae beatae ut accusantium asperiores numquam.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8E3f156a4VvehdgbcaZkP6D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/roles/{role_id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: ''
      subgroup: |-
        Delete Operations
        Remove the specified role and detach all its permissions.
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      role_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vakhd54bE8P6f1Z6Dce3avg'
    controller: null
    method: null
    route: null
    custom: []
